{"ast":null,"code":"import _classCallCheck from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Spinner from'react-bootstrap/Spinner';import Nav from'react-bootstrap/Nav';import{Link}from'react-router-dom';import Table from'react-bootstrap/Table';import Button from'react-bootstrap/Button';import{patho}from'../services/vep.service';import{parseVEP}from'../helpers/vep-parser';/*\n * VEP Component which calls the VEP API for a specific variants\n * Used this => https://rest.ensembl.org/documentation/info/vep_hgvs_get\n */var Vep=/*#__PURE__*/function(_Component){_inherits(Vep,_Component);var _super=_createSuper(Vep);function Vep(props){var _this;_classCallCheck(this,Vep);_this=_super.call(this,props);_this.updatePatho=function(){var _this$state=_this.state,chromosome=_this$state.chromosome,hgsvG=_this$state.hgsvG,hgsvC=_this$state.hgsvC,accession=_this$state.accession,clicked=_this$state.clicked;_this.setState({clicked:true});patho.getPathogenicity(chromosome,hgsvC,accession).then(function(data){parseVEP(data).then(function(data){_this.setState({data:data.results});_this.setState({clicked:false});_this.setState({consequence:data.consequence});});}).then(function(){_this.setState(function(state){return{dataLoading:!state.dataLoading};});});};_this.state={isShow:false,user:{},data:[],chromosome:{},hgsvG:{},clicked:{},consequence:{}};return _this;}_createClass(Vep,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({user:JSON.parse(localStorage.getItem('user')),data:[],dataLoading:true,chromosome:this.props.chromosome,hgsvG:this.props.hgsvG,hgsvC:this.props.hgsvC,clicked:false,consequence:\"Unk\",accession:this.props.accession});this.updatePatho=this.updatePatho.bind(this);}},{key:\"render\",value:function render(){var _this$state2=this.state,data=_this$state2.data,dataLoading=_this$state2.dataLoading,clicked=_this$state2.clicked,consequence=_this$state2.consequence;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{variant:\"info\",onClick:this.updatePatho,type:\"button\"},\"Get variant effect prediction (VEP) by API for \",String(this.props.hgsvC).substring(0,15)),!dataLoading&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"VEP API Results\"),/*#__PURE__*/React.createElement(\"div\",null,\"Most Severe Consequence: \",consequence.length<1?JSON.stringify(consequence):\"Unknown\"),/*#__PURE__*/React.createElement(\"div\",null,data.map(function(value,index){return/*#__PURE__*/React.createElement(\"div\",null,value.exists?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,index+1,\". \",value.transcript_id),value.most_severe_consequence&&/*#__PURE__*/React.createElement(\"li\",null,\"metaSVM \",value.most_severe_consequence),Number.isInteger(parseInt(value.sift_score))&&/*#__PURE__*/React.createElement(\"li\",null,\"SIFT score \",value.sift_score,\" (\",value.sift_prediction,\")\"),Number.isInteger(parseInt(value.metaSVM))&&/*#__PURE__*/React.createElement(\"li\",null,\"metaSVM \",value.metaSVM,\" (\",value.metaSVM_prediction,\")\"),Number.isInteger(parseInt(value.polyphen_score))&&/*#__PURE__*/React.createElement(\"li\",null,\"polyphen_score \",value.polyphen_score,\" (\",value.polyphen_prediction,\")\"),Number.isInteger(parseInt(value.cadd_raw))&&/*#__PURE__*/React.createElement(\"li\",null,\"cadd_raw \",value.cadd_raw),value.polyphen2_hdiv_score&&/*#__PURE__*/React.createElement(\"li\",null,\"polyphen2_hdiv_score \",value.polyphen2_hdiv_score),value.metalr_score&&/*#__PURE__*/React.createElement(\"li\",null,\"metalr_score \",value.metalr_score,\" (\",value.metalr_prediction,\")\"),!value.metalr_score&&!value.polyphen2_hdiv_score&&!value.polyphen_score&&!value.sift_score&&!value.metaSVM&&/*#__PURE__*/React.createElement(\"div\",null,\"No scores returned from Ensemble REST API.\")):JSON.stringify(value));})))),/*#__PURE__*/React.createElement(\"div\",null,dataLoading&&clicked&&/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",role:\"status\",variant:\"primary\",size:\"lg\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Loading...\"))));}}]);return Vep;}(Component);export{Vep};","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Vep.jsx"],"names":["React","Component","Spinner","Nav","Link","Table","Button","patho","parseVEP","Vep","props","updatePatho","state","chromosome","hgsvG","hgsvC","accession","clicked","setState","getPathogenicity","then","data","results","consequence","dataLoading","isShow","user","JSON","parse","localStorage","getItem","bind","String","substring","length","stringify","map","value","index","exists","transcript_id","most_severe_consequence","Number","isInteger","parseInt","sift_score","sift_prediction","metaSVM","metaSVM_prediction","polyphen_score","polyphen_prediction","cadd_raw","polyphen2_hdiv_score","metalr_score","metalr_prediction"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA,OAASC,KAAT,KAAsB,yBAAtB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CAEA;;;MAKMC,CAAAA,G,0FAEF,aAAYC,KAAZ,CAAmB,qCACf,uBAAMA,KAAN,EADe,MA+BnBC,WA/BmB,CA+BL,UAAM,iBACyC,MAAKC,KAD9C,CACRC,UADQ,aACRA,UADQ,CACIC,KADJ,aACIA,KADJ,CACWC,KADX,aACWA,KADX,CACkBC,SADlB,aACkBA,SADlB,CAC6BC,OAD7B,aAC6BA,OAD7B,CAGhB,MAAKC,QAAL,CAAc,CAAED,OAAO,CAAE,IAAX,CAAd,EAEAV,KAAK,CAACY,gBAAN,CAAuBN,UAAvB,CAAmCE,KAAnC,CAA0CC,SAA1C,EAAqDI,IAArD,CAA0D,SAAAC,IAAI,CAAI,CAC9Db,QAAQ,CAACa,IAAD,CAAR,CAAeD,IAAf,CAAoB,SAAEC,IAAF,CAAY,CAC5B,MAAKH,QAAL,CAAc,CAAEG,IAAI,CAAEA,IAAI,CAACC,OAAb,CAAd,EACA,MAAKJ,QAAL,CAAc,CAAED,OAAO,CAAE,KAAX,CAAd,EACA,MAAKC,QAAL,CAAc,CAAEK,WAAW,CAAEF,IAAI,CAACE,WAApB,CAAd,EAEH,CALD,EAMH,CAPD,EAOGH,IAPH,CAOQ,UAAM,CACV,MAAKF,QAAL,CAAc,SAAAN,KAAK,QAAK,CAAEY,WAAW,CAAE,CAACZ,KAAK,CAACY,WAAtB,CAAL,EAAnB,EACH,CATD,EAUH,CA9CkB,CAGf,MAAKZ,KAAL,CAAa,CACTa,MAAM,CAAE,KADC,CAETC,IAAI,CAAE,EAFG,CAGTL,IAAI,CAAE,EAHG,CAITR,UAAU,CAAE,EAJH,CAKTC,KAAK,CAAE,EALE,CAMTG,OAAO,CAAE,EANA,CAOTM,WAAW,CAAE,EAPJ,CAAb,CAHe,aAalB,C,6EAEmB,CAChB,KAAKL,QAAL,CAAc,CACVQ,IAAI,CAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADI,CAEVT,IAAI,CAAE,EAFI,CAGVG,WAAW,CAAE,IAHH,CAIVX,UAAU,CAAE,KAAKH,KAAL,CAAWG,UAJb,CAKVC,KAAK,CAAE,KAAKJ,KAAL,CAAWI,KALR,CAMVC,KAAK,CAAE,KAAKL,KAAL,CAAWK,KANR,CAOVE,OAAO,CAAE,KAPC,CAQVM,WAAW,CAAE,KARH,CASVP,SAAS,CAAE,KAAKN,KAAL,CAAWM,SATZ,CAAd,EAYA,KAAKL,WAAL,CAAmB,KAAKA,WAAL,CAAiBoB,IAAjB,CAAsB,IAAtB,CAAnB,CACH,C,uCAmBQ,kBAC+C,KAAKnB,KADpD,CACGS,IADH,cACGA,IADH,CACSG,WADT,cACSA,WADT,CACsBP,OADtB,cACsBA,OADtB,CAC+BM,WAD/B,cAC+BA,WAD/B,CAGT,mBACI,4CACI,4CACA,oBAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,OAAO,CAAE,KAAKZ,WAArC,CAAkD,IAAI,CAAC,QAAvD,oDACoDqB,MAAM,CAAC,KAAKtB,KAAL,CAAWK,KAAZ,CAAN,CAAyBkB,SAAzB,CAAmC,CAAnC,CAAqC,EAArC,CADpD,CADA,CAKH,CAACT,WAAD,eACG,4CACI,gDADJ,cAGI,2DAC8BD,WAAW,CAACW,MAAZ,CAAmB,CAAnB,CAAuBP,IAAI,CAACQ,SAAL,CAAeZ,WAAf,CAAvB,CAAqD,SADnF,CAHJ,cAMI,+BACKF,IAAI,CAACe,GAAL,CAAS,SAACC,KAAD,CAAQC,KAAR,qBACN,+BAEID,KAAK,CAACE,MAAN,cACA,4CACI,8BAAKD,KAAK,CAAC,CAAX,MAAgBD,KAAK,CAACG,aAAtB,CADJ,CAEKH,KAAK,CAACI,uBAAN,eACG,yCAAaJ,KAAK,CAACI,uBAAnB,CAHR,CAIKC,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACP,KAAK,CAACQ,UAAP,CAAzB,gBACG,4CAAgBR,KAAK,CAACQ,UAAtB,MAAoCR,KAAK,CAACS,eAA1C,KALR,CAMKJ,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACP,KAAK,CAACU,OAAP,CAAzB,gBACG,yCAAaV,KAAK,CAACU,OAAnB,MAA8BV,KAAK,CAACW,kBAApC,KAPR,CAQKN,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACP,KAAK,CAACY,cAAP,CAAzB,gBACG,gDAAoBZ,KAAK,CAACY,cAA1B,MAA4CZ,KAAK,CAACa,mBAAlD,KATR,CAUKR,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACP,KAAK,CAACc,QAAP,CAAzB,gBACG,0CAAcd,KAAK,CAACc,QAApB,CAXR,CAYKd,KAAK,CAACe,oBAAN,eACG,sDAA0Bf,KAAK,CAACe,oBAAhC,CAbR,CAcKf,KAAK,CAACgB,YAAN,eACG,8CAAkBhB,KAAK,CAACgB,YAAxB,MAAwChB,KAAK,CAACiB,iBAA9C,KAfR,CAgBK,CAACjB,KAAK,CAACgB,YAAP,EAAuB,CAAChB,KAAK,CAACe,oBAA9B,EAAsD,CAACf,KAAK,CAACY,cAA7D,EAA+E,CAACZ,KAAK,CAACQ,UAAtF,EAAoG,CAACR,KAAK,CAACU,OAA3G,eACG,4EAjBR,CADA,CAuBApB,IAAI,CAACQ,SAAL,CAAeE,KAAf,CAzBJ,CADM,EAAT,CADL,CANJ,CANA,CADJ,cAiDA,+BACCb,WAAW,EAAIP,OAAf,eACG,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,OAAO,CAAC,SAAlD,CAA4D,IAAI,CAAC,IAAjE,eACA,4BAAM,SAAS,CAAC,SAAhB,eADA,CAFJ,CAjDA,CADJ,CA2DC,C,iBAhHahB,S,EAmHlB,OAASQ,GAAT","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button'\n\nimport { patho } from '../services/vep.service';\nimport { parseVEP } from '../helpers/vep-parser'\n\n/*\n * VEP Component which calls the VEP API for a specific variants\n * Used this => https://rest.ensembl.org/documentation/info/vep_hgvs_get\n */\n\nclass Vep extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isShow: false,\n            user: {},\n            data: [],\n            chromosome: {},\n            hgsvG: {},\n            clicked: {},\n            consequence: {}\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            data: [],\n            dataLoading: true,\n            chromosome: this.props.chromosome,\n            hgsvG: this.props.hgsvG,\n            hgsvC: this.props.hgsvC,\n            clicked: false,\n            consequence: \"Unk\",\n            accession: this.props.accession\n        });\n\n        this.updatePatho = this.updatePatho.bind(this);\n    }\n\n    updatePatho = () => {\n        const { chromosome, hgsvG, hgsvC, accession, clicked } = this.state\n\n        this.setState({ clicked: true })\n        \n        patho.getPathogenicity(chromosome, hgsvC, accession).then(data => {\n            parseVEP(data).then(( data ) => {\n                this.setState({ data: data.results })\n                this.setState({ clicked: false })\n                this.setState({ consequence: data.consequence })\n\n            })\n        }).then(() => {\n            this.setState(state => ({ dataLoading: !state.dataLoading }));\n        })\n    }\n    \n    render() {\n        const { data, dataLoading, clicked, consequence } = this.state;\n\n    return (\n        <div>\n            <div>\n            <Button variant=\"info\" onClick={this.updatePatho} type=\"button\">\n                Get variant effect prediction (VEP) by API for {String(this.props.hgsvC).substring(0,15)}\n            </Button>\n\n        {!dataLoading &&\n            <div>\n                <h2>VEP API Results</h2>\n\n                <div>\n                    Most Severe Consequence: {consequence.length<1 ? JSON.stringify(consequence) : \"Unknown\"}\n                </div>\n                <div>\n                    {data.map((value, index) => (\n                        <div>\n                            {\n                            value.exists ?\n                            <div>\n                                <h3>{index+1}. {value.transcript_id}</h3>\n                                {value.most_severe_consequence &&\n                                    <li>metaSVM {value.most_severe_consequence}</li>}\n                                {Number.isInteger(parseInt(value.sift_score)) &&\n                                    <li>SIFT score {value.sift_score} ({value.sift_prediction})</li>}\n                                {Number.isInteger(parseInt(value.metaSVM)) &&\n                                    <li>metaSVM {value.metaSVM} ({value.metaSVM_prediction})</li>}\n                                {Number.isInteger(parseInt(value.polyphen_score)) &&\n                                    <li>polyphen_score {value.polyphen_score} ({value.polyphen_prediction})</li>}\n                                {Number.isInteger(parseInt(value.cadd_raw)) &&\n                                    <li>cadd_raw {value.cadd_raw}</li>}\n                                {value.polyphen2_hdiv_score &&\n                                    <li>polyphen2_hdiv_score {value.polyphen2_hdiv_score}</li>}\n                                {value.metalr_score &&\n                                    <li>metalr_score {value.metalr_score} ({value.metalr_prediction})</li>}\n                                {!value.metalr_score && !value.polyphen2_hdiv_score && !value.polyphen_score && !value.sift_score && !value.metaSVM &&\n                                    <div>\n                                        No scores returned from Ensemble REST API.\n                                    </div>}\n                            </div>\n                            :\n                            JSON.stringify(value)\n                            }\n                        </div>\n                    ))\n                    }\n                </div>\n            </div>\n            }\n        </div>\n        <div>\n        {dataLoading && clicked &&\n            <Spinner animation=\"border\" role=\"status\" variant=\"primary\" size=\"lg\">\n            <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        }\n        </div>\n        </div>\n    );\n    }\n}\n\nexport { Vep };\n\n"]},"metadata":{},"sourceType":"module"}