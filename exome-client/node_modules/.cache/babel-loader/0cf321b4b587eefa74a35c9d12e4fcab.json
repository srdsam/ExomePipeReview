{"ast":null,"code":"var _jsxFileName = \"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Vep.jsx\";\nimport React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { patho } from '../services/vep.service';\n\nclass Vep extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePatho = () => {\n      const {\n        chromosome,\n        hgsvG\n      } = this.state;\n      patho.getPathogenicity(chromosome, hgsvG).then(data => {\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.state = {\n      user: {},\n      data: {},\n      chromosome: {},\n      hgsvG: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: JSON.parse(localStorage.getItem('user')),\n      data: {\n        loading: true\n      },\n      chromosome: this.props.chromosome,\n      hgsvG: this.props.hgsvG\n    });\n    this.updatePatho = this.updatePatho.bind(this);\n  }\n\n  render() {\n    const {\n      data\n    } = this.state; // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.updatePatho,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Get VEP for \", this.props.hgsvG), !data.loading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Clinvar Results\"), JSON.stringify(data)));\n  }\n\n}\n\nexport { Vep };","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Vep.jsx"],"names":["React","Component","Spinner","Nav","Link","Table","patho","Vep","constructor","props","updatePatho","chromosome","hgsvG","state","getPathogenicity","then","data","setState","user","componentDidMount","JSON","parse","localStorage","getItem","loading","bind","render","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,KAAT,QAAsB,yBAAtB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAExBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,WAtBmB,GAsBL,MAAM;AAChB,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAwB,KAAKC,KAAnC;AAEAP,MAAAA,KAAK,CAACQ,gBAAN,CAAuBH,UAAvB,EAAmCC,KAAnC,EAA0CG,IAA1C,CAA+CC,IAAI,IAAI;AACnD,aAAKC,QAAL,CAAc;AAAED,UAAAA;AAAF,SAAd;AACH,OAFD;AAGH,KA5BkB;;AAGf,SAAKH,KAAL,GAAa;AACTK,MAAAA,IAAI,EAAE,EADG;AAETF,MAAAA,IAAI,EAAE,EAFG;AAGTL,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,QAAL,CAAc;AACVC,MAAAA,IAAI,EAAEE,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADI;AAEVP,MAAAA,IAAI,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAFI;AAGVb,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAHb;AAIVC,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAJR,KAAd;AAOA,SAAKF,WAAL,GAAmB,KAAKA,WAAL,CAAiBe,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAUDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA;AAAF,QAAW,KAAKH,KAAtB,CADK,CAEL;;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAmC,MAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiB,KAAKD,KAAL,CAAWG,KAD5B,CADJ,EAKC,CAACI,IAAI,CAACQ,OAAN,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEKJ,IAAI,CAACO,SAAL,CAAeX,IAAf,CAFL,CANJ,CADJ;AAeC;;AAnDuB;;AAsD5B,SAAST,GAAT","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { patho } from '../services/vep.service';\n\nclass Vep extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            user: {},\n            data: {},\n            chromosome: {},\n            hgsvG: {}\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            data: { loading: true },\n            chromosome: this.props.chromosome,\n            hgsvG: this.props.hgsvG\n        });\n\n        this.updatePatho = this.updatePatho.bind(this);\n    }\n\n    updatePatho = () => {\n        const { chromosome, hgsvG } = this.state\n        \n        patho.getPathogenicity(chromosome, hgsvG).then(data => {\n            this.setState({ data })\n        })\n    }\n    \n    render() {\n        const { data } = this.state;\n        // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return (\n        <div>\n            <button onClick={this.updatePatho} type=\"button\">\n                Get VEP for {this.props.hgsvG}\n            </button>\n\n        {!data.loading && \n            <div>\n                <h2>Clinvar Results</h2>\n                {JSON.stringify(data)}\n            </div>\n            }\n\n        </div>\n    );\n    }\n}\n\nexport { Vep };\n\n"]},"metadata":{},"sourceType":"module"}