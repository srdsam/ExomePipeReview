{"ast":null,"code":"var _jsxFileName = \"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/samplePage/samplePage.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navibar } from '../component/Navibar';\nimport { Spinner } from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table';\nimport { api } from '../services/api.service';\nimport { userService } from '../services/user.service';\nimport { parse } from '../helpers/exomiser-parser';\n\nclass SamplePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      users: [],\n      proband: {},\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: JSON.parse(localStorage.getItem('user')),\n      users: {\n        loading: true\n      },\n      proband: window.location.pathname.split(':')[1],\n      isLoading: true,\n      data: {\n        loading: true\n      }\n    });\n    api.getProbandById(window.location.pathname.split(':')[1]).then(data => {\n      const {\n        genes,\n        raw\n      } = parse(data);\n      this.setState({\n        data: genes\n      });\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      users,\n      proband,\n      data,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navibar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, proband.toString())), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Loading...\")), !isLoading && data.map((value, index) => /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, value.name)));\n  }\n\n}\n\nexport { SamplePage };","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/samplePage/samplePage.jsx"],"names":["React","Link","Navibar","Spinner","Table","api","userService","parse","SamplePage","Component","constructor","props","state","user","users","proband","data","componentDidMount","setState","JSON","localStorage","getItem","loading","window","location","pathname","split","isLoading","getProbandById","then","genes","raw","render","toString","map","value","index","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,GAAT,QAAoB,yBAApB;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,KAAT,QAAsB,4BAAtB;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVL,MAAAA,IAAI,EAAEM,IAAI,CAACZ,KAAL,CAAWa,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADI;AAEVP,MAAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAFG;AAGVP,MAAAA,OAAO,EAAEQ,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAHC;AAIVC,MAAAA,SAAS,EAAE,IAJD;AAKVX,MAAAA,IAAI,EAAE;AAAEM,QAAAA,OAAO,EAAE;AAAX;AALI,KAAd;AAQAjB,IAAAA,GAAG,CAACuB,cAAJ,CAAmBL,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAnB,EAA2DG,IAA3D,CAAgEb,IAAI,IAAI;AACpE,YAAM;AAAEc,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAiBxB,KAAK,CAACS,IAAD,CAA5B;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAEc;AAAR,OAAd;AACA,WAAKZ,QAAL,CAAc;AAAES,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAJD;AAKH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA,IAAxB;AAA8BW,MAAAA;AAA9B,QAA4C,KAAKf,KAAvD;AAEA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,OAAO,CAACkB,QAAR,EAAL,CADJ,CAHJ,EAMKN,SAAS,iBACN,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CAPR,EAWK,CAACA,SAAD,IACGX,IAAI,CAACkB,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,IAAX,CADJ,CAZR,CAFJ;AAsBH;;AArDoC;;AAwDzC,SAAS7B,UAAT","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navibar } from '../component/Navibar'\nimport { Spinner } from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table';\nimport { api } from '../services/api.service';\n\nimport { userService } from '../services/user.service';\nimport { parse } from '../helpers/exomiser-parser';\n\nclass SamplePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n            users: [],\n            proband: {},\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            users: { loading: true },\n            proband: window.location.pathname.split(':')[1],\n            isLoading: true,\n            data: { loading: true }\n        });\n\n        api.getProbandById(window.location.pathname.split(':')[1]).then(data => {\n            const { genes, raw } = parse(data);\n            this.setState({ data: genes })\n            this.setState({ isLoading: false})\n        })\n    }\n\n    render() {\n        const { user, users, proband, data, isLoading } = this.state;\n\n        return (\n\n            <div>\n\n                <Navibar></Navibar>\n                <div>\n                    <h1>{proband.toString()}</h1>\n                </div>\n                {isLoading && \n                    <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                }\n                {!isLoading &&\n                    data.map((value, index) => (\n                        <h2>{value.name}</h2>\n                        \n                    ))\n                }\n                \n            </div>\n        );\n    }\n}\n\nexport { SamplePage };\n"]},"metadata":{},"sourceType":"module"}