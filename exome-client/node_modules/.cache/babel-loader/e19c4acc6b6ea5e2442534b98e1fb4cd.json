{"ast":null,"code":"var _jsxFileName = \"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/exportData.jsx\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nexport const generateReport = ({\n  data,\n  fileName\n}) => {\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  const fileExtension = '.xlsx';\n\n  const generateReport = (data, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = {\n      Sheets: {\n        'data': ws\n      },\n      SheetNames: ['data']\n    };\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const dataBlob = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(dataBlob, fileName + fileExtension);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => generateReport(data, fileName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Generate Report\"));\n}; //         <Button variant=\"warning\" onClick={(e) => exportToCSV(csvData,fileName)}>Export</Button>","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/exportData.jsx"],"names":["React","Button","FileSaver","XLSX","generateReport","data","fileName","fileType","fileExtension","ws","utils","json_to_sheet","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","dataBlob","Blob","saveAs","display","justifyContent","alignItems","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAEhD,QAAMC,QAAQ,GAAG,iFAAjB;AACA,QAAMC,aAAa,GAAG,OAAtB;;AAEA,QAAMJ,cAAc,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACvC,UAAMG,EAAE,GAAGN,IAAI,CAACO,KAAL,CAAWC,aAAX,CAAyBN,IAAzB,CAAX;AACA,UAAMO,EAAE,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAE,gBAAQJ;AAAV,OAAV;AAA0BK,MAAAA,UAAU,EAAE,CAAC,MAAD;AAAtC,KAAX;AACA,UAAMC,WAAW,GAAGZ,IAAI,CAACa,KAAL,CAAWJ,EAAX,EAAe;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAf,CAApB;AACA,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAAS,CAACL,WAAD,CAAT,EAAwB;AAACG,MAAAA,IAAI,EAAEX;AAAP,KAAxB,CAAjB;AACAL,IAAAA,SAAS,CAACmB,MAAV,CAAiBF,QAAjB,EAA2Bb,QAAQ,GAAGE,aAAtC;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACc,MAAAA,OAAO,EAAE,MAAV;AAAmBC,MAAAA,cAAc,EAAC,QAAlC;AAA4CC,MAAAA,UAAU,EAAC;AAAvD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAGC,CAAD,IAAOrB,cAAc,CAACC,IAAD,EAAOC,QAAP,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAOH,CApBM,C,CAsBP","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nexport const generateReport = ({data, fileName}) => {\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const generateReport = (data, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(data);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const dataBlob = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(dataBlob, fileName + fileExtension);\n    }\n\n    return (\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n            <Button onClick={(e) => generateReport(data, fileName)}>\n                Generate Report\n            </Button>\n        </div>\n    )\n}\n\n//         <Button variant=\"warning\" onClick={(e) => exportToCSV(csvData,fileName)}>Export</Button>\n"]},"metadata":{},"sourceType":"module"}