{"ast":null,"code":"const apiUrl = \"http://grch37.rest.ensembl.org/vep/homo_sapiens/hgvs\";\n\nasync function getPathogenicity(chromosome, hgsvG) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n  const columns = \"dbNSFP=CADD_raw,Polyphen2_HDIV_score,SIFT_score,MetaSVM_score,MetaLR_score,\";\n  console.log(`${apiUrl}/${chromosome}:${hgsvG}/?${columns}`);\n  fetch(`${apiUrl}/${chromosome}:${hgsvG}/?${columns}`, requestOptions).then(response => response.json()).then(result => {\n    return result;\n  });\n}\n\nexport const patho = {\n  getPathogenicity\n};","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/services/vep.service.js"],"names":["apiUrl","getPathogenicity","chromosome","hgsvG","myHeaders","Headers","append","requestOptions","method","headers","redirect","columns","console","log","fetch","then","response","json","result","patho"],"mappings":"AAAA,MAAMA,MAAM,GAAG,sDAAf;;AAEA,eAAeC,gBAAf,CAAgCC,UAAhC,EAA4CC,KAA5C,EAAmD;AAC/C,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,MAAIC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEL,SAFU;AAGnBM,IAAAA,QAAQ,EAAE;AAHS,GAArB;AAMA,QAAMC,OAAO,GAAG,6EAAhB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAEb,MAAO,IAAGE,UAAW,IAAGC,KAAM,KAAIQ,OAAQ,EAAzD;AAEAG,EAAAA,KAAK,CAAE,GAAEd,MAAO,IAAGE,UAAW,IAAGC,KAAM,KAAIQ,OAAQ,EAA9C,EAAiDJ,cAAjD,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAI;AACZ,WAAOA,MAAP;AACH,GAJL;AAKH;;AAED,OAAO,MAAMC,KAAK,GAAG;AACjBlB,EAAAA;AADiB,CAAd","sourcesContent":["const apiUrl = \"http://grch37.rest.ensembl.org/vep/homo_sapiens/hgvs\"\n\nasync function getPathogenicity(chromosome, hgsvG) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    const columns = \"dbNSFP=CADD_raw,Polyphen2_HDIV_score,SIFT_score,MetaSVM_score,MetaLR_score,\"\n\n    console.log(`${apiUrl}/${chromosome}:${hgsvG}/?${columns}`)\n\n    fetch(`${apiUrl}/${chromosome}:${hgsvG}/?${columns}`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            return result\n        })\n}\n\nexport const patho = {\n    getPathogenicity\n};"]},"metadata":{},"sourceType":"module"}