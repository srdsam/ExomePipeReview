{"ast":null,"code":"import _classCallCheck from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Spinner from'react-bootstrap/Spinner';import Nav from'react-bootstrap/Nav';import{Link}from'react-router-dom';import Table from'react-bootstrap/Table';import{clinvar}from'../services/clinvar.service';import Button from'react-bootstrap/Button';/*\n * Clinvar Component which calls the ClinVar API for a specific gene\n * Used this => https://clinicaltables.nlm.nih.gov/apidoc/variants/v4/doc.html\n */var Clinvar=/*#__PURE__*/function(_Component){_inherits(Clinvar,_Component);var _super=_createSuper(Clinvar);function Clinvar(props){var _this;_classCallCheck(this,Clinvar);_this=_super.call(this,props);_this.toggleShow=function(){var geneID=_this.state.geneID;clinvar.getClinVar(geneID.text).then(function(data){_this.setState({data:data});_this.setState(function(state){return{isShow:!state.isShow};});});};_this.state={isShow:false,user:{},data:[],geneID:_this.props.geneID};return _this;}_createClass(Clinvar,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({user:JSON.parse(localStorage.getItem('user')),data:{loading:true}});}},{key:\"render\",value:function render(){var data=this.state.data;// Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{justifyContent:\"center\"}},/*#__PURE__*/React.createElement(Button,{variant:\"info\",onClick:this.toggleShow,type:\"button\"},\"Clinvar API Results for Gene\")),this.state.isShow?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Clinvar Results\"),/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true,variant:\"dark\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Variant\"),/*#__PURE__*/React.createElement(\"th\",null,\"Effect Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"AA Change\"),/*#__PURE__*/React.createElement(\"th\",null,\"Phenotype\"))),/*#__PURE__*/React.createElement(\"tbody\",null,data[3].map(function(value,index){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,value[4]),/*#__PURE__*/React.createElement(\"td\",null,value[5]),/*#__PURE__*/React.createElement(\"td\",null,value[0]),/*#__PURE__*/React.createElement(\"td\",null,value[3]));})))):null);}}]);return Clinvar;}(Component);export{Clinvar};","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Clinvar.jsx"],"names":["React","Component","Spinner","Nav","Link","Table","clinvar","Button","Clinvar","props","toggleShow","geneID","state","getClinVar","text","then","data","setState","isShow","user","JSON","parse","localStorage","getItem","loading","justifyContent","map","value","index"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,OAASC,OAAT,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA;;;MAKMC,CAAAA,O,kGAEF,iBAAYC,KAAZ,CAAmB,yCACf,uBAAMA,KAAN,EADe,MAmBnBC,UAnBmB,CAmBN,UAAM,IACPC,CAAAA,MADO,CACI,MAAKC,KADT,CACPD,MADO,CAGfL,OAAO,CAACO,UAAR,CAAmBF,MAAM,CAACG,IAA1B,EAAgCC,IAAhC,CAAqC,SAAAC,IAAI,CAAI,CACzC,MAAKC,QAAL,CAAc,CAAED,IAAI,CAAJA,IAAF,CAAd,EACA,MAAKC,QAAL,CAAc,SAAAL,KAAK,QAAK,CAAEM,MAAM,CAAE,CAACN,KAAK,CAACM,MAAjB,CAAL,EAAnB,EACH,CAHD,EAKH,CA3BkB,CAGf,MAAKN,KAAL,CAAa,CACTM,MAAM,CAAE,KADC,CAETC,IAAI,CAAE,EAFG,CAGTH,IAAI,CAAE,EAHG,CAITL,MAAM,CAAE,MAAKF,KAAL,CAAWE,MAJV,CAAb,CAHe,aASlB,C,iFAEmB,CAChB,KAAKM,QAAL,CAAc,CACVE,IAAI,CAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADI,CAEVP,IAAI,CAAE,CAAEQ,OAAO,CAAE,IAAX,CAFI,CAAd,EAKH,C,uCAYQ,IACGR,CAAAA,IADH,CACY,KAAKJ,KADjB,CACGI,IADH,CAEL;AAEJ,mBACI,4CACI,2BAAK,KAAK,CAAE,CAAES,cAAc,CAAE,QAAlB,CAAZ,eACA,oBAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,OAAO,CAAE,KAAKf,UAArC,CAAiD,IAAI,CAAC,QAAtD,iCADA,CADJ,CAMC,KAAKE,KAAL,CAAWM,MAAX,cACG,4CACI,gDADJ,cAEI,oBAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,CAA8B,OAAO,CAAC,MAAtC,eACI,8CACI,2CACI,wCADJ,cAEI,4CAFJ,cAGI,0CAHJ,cAII,0CAJJ,CADJ,CADJ,cASI,iCACKF,IAAI,CAAC,CAAD,CAAJ,CAAQU,GAAR,CAAY,SAACC,KAAD,CAAQC,KAAR,qBACb,2CACI,8BAAKD,KAAK,CAAC,CAAD,CAAV,CADJ,cAEI,8BAAKA,KAAK,CAAC,CAAD,CAAV,CAFJ,cAGI,8BAAKA,KAAK,CAAC,CAAD,CAAV,CAHJ,cAII,8BAAKA,KAAK,CAAC,CAAD,CAAV,CAJJ,CADa,EAAZ,CADL,CATJ,CAFJ,CADH,CAyBG,IA/BJ,CADJ,CAqCC,C,qBAxEiB1B,S,EA2EtB,OAASO,OAAT","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { clinvar } from '../services/clinvar.service';\nimport Button from 'react-bootstrap/Button'\n\n/*\n * Clinvar Component which calls the ClinVar API for a specific gene\n * Used this => https://clinicaltables.nlm.nih.gov/apidoc/variants/v4/doc.html\n */\n\nclass Clinvar extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            isShow: false,\n            user: {},\n            data: [],\n            geneID: this.props.geneID\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            data: { loading: true }\n        });\n\n    }\n    \n    toggleShow = () => {\n        const { geneID } = this.state\n\n        clinvar.getClinVar(geneID.text).then(data => {\n            this.setState({ data })\n            this.setState(state => ({ isShow: !state.isShow }));\n        })\n\n    };\n    \n    render() {\n        const { data } = this.state;\n        // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return (\n        <div>\n            <div style={{ justifyContent: \"center\"}}>\n            <Button variant=\"info\" onClick={this.toggleShow} type=\"button\">\n                Clinvar API Results for Gene\n            </Button>\n            </div>\n        {this.state.isShow ? \n            <div>\n                <h2>Clinvar Results</h2>\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>Variant</th>\n                            <th>Effect Type</th>\n                            <th>AA Change</th>\n                            <th>Phenotype</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data[3].map((value, index) => (\n                        <tr>\n                            <td>{value[4]}</td>\n                            <td>{value[5]}</td>\n                            <td>{value[0]}</td>\n                            <td>{value[3]}</td>\n                        </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n            : \n            null\n            }\n\n        </div>\n    );\n    }\n}\n\nexport { Clinvar };\n\n"]},"metadata":{},"sourceType":"module"}