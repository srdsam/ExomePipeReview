{"ast":null,"code":"var _jsxFileName = \"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Clinvar.jsx\";\nimport React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { clinvar } from '../services/clinvar.service';\nimport Button from 'react-bootstrap/Button';\n\nclass Clinvar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleShow = () => {\n      const {\n        geneID\n      } = this.state;\n      clinvar.getClinVar(geneID.text).then(data => {\n        this.setState({\n          data\n        });\n        this.setState(state => ({\n          isShow: !state.isShow\n        }));\n      });\n    };\n\n    this.state = {\n      isShow: false,\n      user: {},\n      data: [],\n      geneID: this.props.geneID\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: JSON.parse(localStorage.getItem('user')),\n      data: {\n        loading: true\n      }\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state; // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      onClick: this.toggleShow,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Clinvar API Results for Gene\")), this.state.isShow ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Clinvar Results\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Variant\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Effect Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"AA Change\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, \"Phenotype\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, data[3].map((value, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, value[4]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, value[5]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, value[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, value[3])))))) : null);\n  }\n\n}\n\nexport { Clinvar };","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Clinvar.jsx"],"names":["React","Component","Spinner","Nav","Link","Table","clinvar","Button","Clinvar","constructor","props","toggleShow","geneID","state","getClinVar","text","then","data","setState","isShow","user","componentDidMount","JSON","parse","localStorage","getItem","loading","render","justifyContent","map","value","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { clinvar } from '../services/clinvar.service';\nimport Button from 'react-bootstrap/Button'\n\nclass Clinvar extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            isShow: false,\n            user: {},\n            data: [],\n            geneID: this.props.geneID\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            data: { loading: true }\n        });\n\n    }\n    \n    toggleShow = () => {\n        const { geneID } = this.state\n\n        clinvar.getClinVar(geneID.text).then(data => {\n            this.setState({ data })\n            this.setState(state => ({ isShow: !state.isShow }));\n        })\n\n    };\n    \n    render() {\n        const { data } = this.state;\n        // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return (\n        <div>\n            <div style={{ justifyContent: \"center\"}}>\n            <Button variant=\"info\" onClick={this.toggleShow} type=\"button\">\n                Clinvar API Results for Gene\n            </Button>\n            </div>\n        {this.state.isShow ? \n            <div>\n                <h2>Clinvar Results</h2>\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>Variant</th>\n                            <th>Effect Type</th>\n                            <th>AA Change</th>\n                            <th>Phenotype</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data[3].map((value, index) => (\n                        <tr>\n                            <td>{value[4]}</td>\n                            <td>{value[5]}</td>\n                            <td>{value[0]}</td>\n                            <td>{value[3]}</td>\n                        </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n            : \n            null\n            }\n\n        </div>\n    );\n    }\n}\n\nexport { Clinvar };\n\n"]},"metadata":{},"sourceType":"module"}