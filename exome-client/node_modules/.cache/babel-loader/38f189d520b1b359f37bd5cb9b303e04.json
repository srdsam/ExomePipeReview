{"ast":null,"code":"import { userService } from '../services/user.service';\nimport { authHeader } from './auth-header'; // Need to update to work with server.js responses!!\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (response.status !== 200) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        userService.logout();\n        window.location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nconst apiUrl = \"http://localhost:8002\";\n/*\nfunction getProbands() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Basic dGVzdDp0ZXN0\");\n\n    var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    };\n\n    fetch(`${apiUrl}/proband`, requestOptions)\n    .then(data => {\n        if (data) {\n            return data.text()\n        }\n        return \"Error\"\n    })\n}*/\n\nfunction getProbands() {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Authorization\", \"Basic dGVzdDp0ZXN0\");\n  const requestOptions = {\n    method: 'GET',\n    headers: myHeaders\n  };\n  return fetch(`${apiUrl}/proband`, requestOptions).then(data => {\n    if (data) {\n      return data.json;\n    }\n\n    return \"Error\";\n  });\n}\n\nfunction getProbandById(proband) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: \"Request for list of probands and phenotypes\"\n    })\n  };\n  return fetch(`${apiUrl}/proband?id=${proband}`, requestOptions).then(handleResponse).then(data => {\n    if (data) {\n      return data;\n    }\n\n    return \"Error\";\n  });\n}\n\nfunction getPheno(proband) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: \"Request for list of probands and phenotypes\"\n    })\n  };\n  return fetch(`${apiUrl}/proband/genes?id=${proband}`, requestOptions).then(handleResponse).then(data => {\n    if (data) {\n      return data;\n    }\n\n    return \"Error\";\n  });\n}\n\nfunction getGenes(proband) {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: \"Request for list of probands and phenotypes\"\n    })\n  };\n  return fetch(`${apiUrl}/proband/genes?id=${proband}`, requestOptions).then(handleResponse).then(data => {\n    if (data) {\n      return data;\n    }\n\n    return \"Error\";\n  });\n}\n\nexport const api = {\n  getProbands,\n  getProbandById,\n  getPheno,\n  getGenes\n};","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/helpers/api.handle.js"],"names":["userService","authHeader","handleResponse","response","text","then","data","JSON","parse","status","logout","window","location","reload","error","message","statusText","Promise","reject","apiUrl","getProbands","myHeaders","Headers","append","requestOptions","method","headers","fetch","json","getProbandById","proband","body","stringify","getPheno","getGenes","api"],"mappings":"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","sourcesContent":["import { userService } from '../services/user.service'\nimport { authHeader } from './auth-header';\n\n// Need to update to work with server.js responses!!\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (response.status !== 200) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                userService.logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}\n\nconst apiUrl = \"http://localhost:8002\"\n/*\nfunction getProbands() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Basic dGVzdDp0ZXN0\");\n\n    var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    };\n\n    fetch(`${apiUrl}/proband`, requestOptions)\n    .then(data => {\n        if (data) {\n            return data.text()\n        }\n        return \"Error\"\n    })\n}*/\n\nfunction getProbands() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Basic dGVzdDp0ZXN0\");\n\n    const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n    };\n\n    return fetch(`${apiUrl}/proband`, requestOptions)\n        .then(data => {\n            if (data) {\n                return data.json\n            }\n            return \"Error\";\n        });\n}\n\nfunction getProbandById(proband) {\n    const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({data: \"Request for list of probands and phenotypes\"})\n    };\n\n    return fetch(`${apiUrl}/proband?id=${proband}`, requestOptions)\n        .then(handleResponse)\n        .then(data => {\n            if (data) {\n                return data\n            }\n            return \"Error\";\n        });\n}\nfunction getPheno(proband) {\n    const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({data: \"Request for list of probands and phenotypes\"})\n    };\n\n    return fetch(`${apiUrl}/proband/genes?id=${proband}`, requestOptions)\n        .then(handleResponse)\n        .then(data => {\n            if (data) {\n                return data\n            }\n            return \"Error\";\n        });\n}\nfunction getGenes(proband) {\n    const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({data: \"Request for list of probands and phenotypes\"})\n    };\n\n    return fetch(`${apiUrl}/proband/genes?id=${proband}`, requestOptions)\n        .then(handleResponse)\n        .then(data => {\n            if (data) {\n                return data\n            }\n            return \"Error\";\n        });\n}\n\nexport const api = {\n    getProbands,\n    getProbandById,\n    getPheno,\n    getGenes\n};"]},"metadata":{},"sourceType":"module"}