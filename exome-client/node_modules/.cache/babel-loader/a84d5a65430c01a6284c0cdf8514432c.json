{"ast":null,"code":"var _jsxFileName = \"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/samplePage/samplePage.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navibar } from '../component/Navibar';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Table from 'react-bootstrap/Table';\nimport { api } from '../services/api.service';\nimport { userService } from '../services/user.service';\nimport { parse } from '../helpers/exomiser-parser';\n\nclass SamplePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      users: [],\n      proband: {},\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: JSON.parse(localStorage.getItem('user')),\n      users: {\n        loading: true\n      },\n      proband: window.location.pathname.split(':')[1],\n      isLoading: true,\n      data: {\n        loading: true\n      }\n    });\n    api.getProbandById(window.location.pathname.split(':')[1]).then(data => {\n      const {\n        genes,\n        raw\n      } = parse(data);\n      this.setState({\n        data: genes\n      });\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      users,\n      proband,\n      data,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navibar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Proband - \", /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        fontSize: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 64\n      }\n    }, proband.toString()))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Loading...\")), !isLoading && data.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }, value.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 50\n      }\n    }, \"Inheritance of Gene:\"), value.compatibleInheritanceModes.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 54\n      }\n    }, value)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 50\n      }\n    }, \"OMIM Associated Diseases:\"), value.OMIM.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 53\n      }\n    }, value.diseaseName)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 50\n      }\n    }, \"HiPhive Results:\"), value.HiPhive.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 53\n      }\n    }, \"Organism: \", value.model.organism), value.model.organism && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 57\n      }\n    }, value.model.diseaseTerm), value.bestModelPhenotypeMatches && value.bestModelPhenotypeMatches.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 61\n      }\n    }, \"Matched Phenotype: \", JSON.stringify(value.match.label))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }, \"Exomiser Scores:\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, \"Variant Score: \", value.variantScore), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, \"Priority Score: \", value.priorityScore), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    }, \"Combined Score: \", value.combinedScore))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, \"Variants\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 53\n      }\n    }, \"Variant\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 53\n      }\n    }, \"Effect Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 53\n      }\n    }, \"Variant Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 53\n      }\n    }, \"Inheritance Mode of Mutation\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 53\n      }\n    }, \"Phred Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 53\n      }\n    }, \"Frequency Score\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 45\n      }\n    }, value.variantEvaluations.map((value, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        maxWidth: \"10px\",\n        wordWrap: \"break-word\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 53\n      }\n    }, value.chromosomeName, \":\", value.position, \":\", value.ref, \":\", value.alt), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 53\n      }\n    }, value.variantEffect), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 53\n      }\n    }, value.variantScore), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 53\n      }\n    }, value.contributingInheritanceModes), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 53\n      }\n    }, value.phredScore), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 53\n      }\n    }, value.frequencyScore))))))))))));\n  }\n\n}\n\nexport { SamplePage };","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/samplePage/samplePage.jsx"],"names":["React","Link","Navibar","Spinner","Table","api","userService","parse","SamplePage","Component","constructor","props","state","user","users","proband","data","componentDidMount","setState","JSON","localStorage","getItem","loading","window","location","pathname","split","isLoading","getProbandById","then","genes","raw","render","fontSize","toString","map","value","index","name","compatibleInheritanceModes","OMIM","diseaseName","HiPhive","model","organism","diseaseTerm","bestModelPhenotypeMatches","stringify","match","label","textAlign","variantScore","priorityScore","combinedScore","variantEvaluations","maxWidth","wordWrap","chromosomeName","position","ref","alt","variantEffect","contributingInheritanceModes","phredScore","frequencyScore"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navibar } from '../component/Navibar'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table';\nimport { api } from '../services/api.service';\n\nimport { userService } from '../services/user.service';\nimport { parse } from '../helpers/exomiser-parser';\n\nclass SamplePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n            users: [],\n            proband: {},\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            users: { loading: true },\n            proband: window.location.pathname.split(':')[1],\n            isLoading: true,\n            data: { loading: true }\n        });\n\n        api.getProbandById(window.location.pathname.split(':')[1]).then(data => {\n            const { genes, raw } = parse(data);\n            this.setState({ data: genes })\n            this.setState({ isLoading: false})\n        })\n    }\n\n    render() {\n        const { user, users, proband, data, isLoading } = this.state;\n\n        return (\n\n            <div>\n\n                <Navibar></Navibar>\n                <div>\n                    <h1 style={{ fontSize: \"50px\" }}>Proband - <i style={{ fontSize: \"50px\" }}>{proband.toString()}</i></h1>\n                </div>\n                <br></br>\n                {isLoading && \n                    <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                }\n                {!isLoading &&\n                    data.map((value, index) => (\n                        <div>\n                            <div className=\"jumbotron jumbotron-fluid\">\n                                <div className=\"container\">\n                                    <h1>{value.name}</h1>\n                                    <div className=\"row\">\n                                        <div className='col-md-8'>\n                                            <div><h2>Inheritance of Gene:</h2>{value.compatibleInheritanceModes.map((value, index) => (\n                                                <div><li>{value}</li></div>\n                                            ))}</div>\n                                            <br></br>\n                                            <div><h2>OMIM Associated Diseases:</h2>{value.OMIM.map((value, index) => (\n                                                <div>\n                                                    <li>{value.diseaseName}</li>\n                                                </div>\n                                            ))}</div>\n                                            <br></br>\n                                            <div><h2>HiPhive Results:</h2>{value.HiPhive.map((value, index) => (\n                                                <div>\n                                                    <h3 style={{ fontSize: \"12px\"}}>Organism: {value.model.organism}</h3>\n                                                    {value.model.organism &&\n                                                        <div>{value.model.diseaseTerm}</div>}\n                                                    {value.bestModelPhenotypeMatches &&\n                                                        value.bestModelPhenotypeMatches.map((value, index) => (\n                                                            <div>\n                                                                Matched Phenotype: {JSON.stringify(value.match.label)}\n                                                            </div>\n                                                        ))}\n                                                </div>\n                                            ))}</div>\n                                        </div>\n                                        <div className='col-md-4'>\n                                            <h2>Exomiser Scores:</h2>\n                                            <p style={{ textAlign: \"left\" }}>Variant Score: {value.variantScore}</p>\n                                            <p style={{ textAlign: \"left\" }}>Priority Score: {value.priorityScore}</p>\n                                            <p style={{ textAlign: \"left\" }}>Combined Score: {value.combinedScore}</p>                                        \n                                        </div>\n                                    </div>\n                                    <div className=\"row\"> \n                                    <div className='col-md-12'>\n                                        <h2>Variants</h2>\n                                        <Table striped bordered hover variant=\"dark\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Variant</th>\n                                                    <th>Effect Type</th>\n                                                    <th>Variant Score</th>\n                                                    <th>Inheritance Mode of Mutation</th>\n                                                    <th>Phred Score</th>\n                                                    <th>Frequency Score</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {value.variantEvaluations.map((value, index) => (\n                                                <tr>\n                                                    <td style={{ maxWidth: \"10px\", wordWrap: \"break-word\" }}>{value.chromosomeName}:{value.position}:{value.ref}:{value.alt}</td>\n                                                    <td>{value.variantEffect}</td>\n                                                    <td>{value.variantScore}</td>\n                                                    <td>{value.contributingInheritanceModes}</td>\n                                                    <td>{value.phredScore}</td>\n                                                    <td>{value.frequencyScore}</td>\n\n                                                </tr>\n                                                ))}\n                                            </tbody>\n                                        </Table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n                \n            </div>\n        );\n    }\n}\n\nexport { SamplePage };\n"]},"metadata":{},"sourceType":"module"}