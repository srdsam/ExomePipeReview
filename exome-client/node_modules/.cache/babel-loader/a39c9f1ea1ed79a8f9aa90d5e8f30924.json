{"ast":null,"code":"export function parseVEP(data) {\n  let results = [];\n\n  if (data[0]) {\n    let scores = data[0].transcript_consequences;\n\n    for (var i = 0; i < scores.length; i++) {\n      let score = scores[i];\n      const VEP = {\n        exists: true,\n        metaSVM: score.metasvm_score,\n        sift_score: score.sift_score,\n        polyphen_score: score.polyphen_score,\n        cadd_raw: score.cadd_raw,\n        polyphen2_hdiv_score: score.polyphen2_hdiv_score,\n        metalr_score: score.metalr_score\n      };\n      results.push(VEP);\n    }\n  } else {\n    const VEP = {\n      exists: false\n    };\n    results.push(VEP);\n  }\n\n  console.log(results);\n  return results;\n}","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/helpers/vep-parser.js"],"names":["parseVEP","data","results","scores","transcript_consequences","i","length","score","VEP","exists","metaSVM","metasvm_score","sift_score","polyphen_score","cadd_raw","polyphen2_hdiv_score","metalr_score","push","console","log"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AAE3B,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAID,IAAI,CAAC,CAAD,CAAR,EAAa;AACT,QAAIE,MAAM,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,uBAArB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,UAAIE,KAAK,GAAGJ,MAAM,CAACE,CAAD,CAAlB;AAEA,YAAMG,GAAG,GAAG;AACRC,QAAAA,MAAM,EAAE,IADA;AAERC,QAAAA,OAAO,EAAEH,KAAK,CAACI,aAFP;AAGRC,QAAAA,UAAU,EAAEL,KAAK,CAACK,UAHV;AAIRC,QAAAA,cAAc,EAAEN,KAAK,CAACM,cAJd;AAKRC,QAAAA,QAAQ,EAAEP,KAAK,CAACO,QALR;AAMRC,QAAAA,oBAAoB,EAAER,KAAK,CAACQ,oBANpB;AAORC,QAAAA,YAAY,EAAET,KAAK,CAACS;AAPZ,OAAZ;AAUAd,MAAAA,OAAO,CAACe,IAAR,CAAaT,GAAb;AACH;AAEJ,GAnBD,MAmBO;AACH,UAAMA,GAAG,GAAG;AACRC,MAAAA,MAAM,EAAE;AADA,KAAZ;AAGAP,IAAAA,OAAO,CAACe,IAAR,CAAaT,GAAb;AACH;;AAEDU,EAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AAEA,SAAOA,OAAP;AACH","sourcesContent":["export function parseVEP(data) {\n\n    let results = []\n\n    if (data[0]) {\n        let scores = data[0].transcript_consequences\n\n        for (var i = 0; i < scores.length; i++){\n            let score = scores[i]\n\n            const VEP = {\n                exists: true,\n                metaSVM: score.metasvm_score,\n                sift_score: score.sift_score,\n                polyphen_score: score.polyphen_score,\n                cadd_raw: score.cadd_raw,\n                polyphen2_hdiv_score: score.polyphen2_hdiv_score,\n                metalr_score: score.metalr_score,\n            }\n\n            results.push(VEP)\n        }\n\n    } else {\n        const VEP = {\n            exists: false\n        }\n        results.push(VEP)\n    }\n\n    console.log(results)\n\n    return results\n}"]},"metadata":{},"sourceType":"module"}