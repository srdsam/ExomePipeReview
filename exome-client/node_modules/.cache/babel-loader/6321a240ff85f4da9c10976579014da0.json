{"ast":null,"code":"var _jsxFileName = \"/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Clinvar.jsx\";\nimport React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav';\nimport { Link } from 'react-router-dom';\nimport { clinvar } from '../services/clinvar.service';\n\nclass Clinvar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleShow = () => {\n      this.setState(state => ({\n        isShow: !state.isShow\n      }));\n    };\n\n    this.state = {\n      isShow: false,\n      user: {},\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: JSON.parse(localStorage.getItem('user')),\n      data: {\n        loading: true\n      }\n    });\n    clinvar.getClinVar(this.props.geneID.text).then(data => {\n      this.setState({\n        data\n      });\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.state; // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleShow,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Show Clinvar\")), this.state.isShow ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Clinvar Results\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Variant\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Effect Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, \"Variant Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, \"Inheritance Mode of Variant\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Phred Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Frequency Score\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Frequency Sources\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, data[3].map((value, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, value[4]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, value[5]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, value.variantScore), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, JSON.stringify(value.contributingInheritanceModes)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, value.phredScore), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, value.frequencyScore), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, value.frequencyData.knownFrequencies.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, value.source, \" : \", value.frequency))))))), data[3].map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Variant: \", value[4]), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Effect Type: \", value[5]), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Amino Acid Change: \", value[0]), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Phenotype: \", value[3]), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    })))) : null);\n  }\n\n}\n\nexport { Clinvar };","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/component/Clinvar.jsx"],"names":["React","Component","Spinner","Nav","Link","clinvar","Clinvar","constructor","props","toggleShow","setState","state","isShow","user","data","componentDidMount","JSON","parse","localStorage","getItem","loading","getClinVar","geneID","text","then","render","justifyContent","map","value","index","variantScore","stringify","contributingInheritanceModes","phredScore","frequencyScore","frequencyData","knownFrequencies","source","frequency"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,UArBmB,GAqBN,MAAM;AACnB,WAAKC,QAAL,CAAcC,KAAK,KAAK;AAAEC,QAAAA,MAAM,EAAE,CAACD,KAAK,CAACC;AAAjB,OAAL,CAAnB;AACC,KAvBkB;;AAGf,SAAKD,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,QAAL,CAAc;AACVG,MAAAA,IAAI,EAAEG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADI;AAEVL,MAAAA,IAAI,EAAE;AAAEM,QAAAA,OAAO,EAAE;AAAX;AAFI,KAAd;AAKAf,IAAAA,OAAO,CAACgB,UAAR,CAAmB,KAAKb,KAAL,CAAWc,MAAX,CAAkBC,IAArC,EAA2CC,IAA3C,CAAgDV,IAAI,IAAI;AACpD,WAAKJ,QAAL,CAAc;AAAEI,QAAAA;AAAF,OAAd;AACH,KAFD;AAGH;;AAMDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEX,MAAAA;AAAF,QAAW,KAAKH,KAAtB,CADK,CAEL;;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEe,QAAAA,cAAc,EAAE;AAAlB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,OAAO,EAAE,KAAKjB,UAAtB;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADJ,EAMC,KAAKE,KAAL,CAAWC,MAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPJ,CADJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,IAAI,CAAC,CAAD,CAAJ,CAAQa,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAAC,CAAD,CAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAAC,CAAD,CAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACE,YAAX,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,IAAI,CAACe,SAAL,CAAeH,KAAK,CAACI,4BAArB,CAAL,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACK,UAAX,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,KAAK,CAACM,cAAX,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,KAAK,CAACO,aAAN,CAAoBC,gBAApB,CAAqCT,GAArC,CAAyC,CAACC,KAAD,EAAQC,KAAR,kBAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,KAAK,CAACS,MAAZ,SAAuBT,KAAK,CAACU,SAA7B,CADC,CAAL,CAPJ,CADC,CADL,CAZJ,CAFJ,EA+BKxB,IAAI,CAAC,CAAD,CAAJ,CAAQa,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACUD,KAAK,CAAC,CAAD,CADf,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACcA,KAAK,CAAC,CAAD,CADnB,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoBA,KAAK,CAAC,CAAD,CADzB,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACYA,KAAK,CAAC,CAAD,CADjB,CAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADH,CA/BL,CADH,GAoDG,IA1DJ,CADJ;AAgEC;;AA/F2B;;AAkGhC,SAAStB,OAAT","sourcesContent":["import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Nav from 'react-bootstrap/Nav'\nimport { Link } from 'react-router-dom';\nimport { clinvar } from '../services/clinvar.service';\n\nclass Clinvar extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            isShow: false,\n            user: {},\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ \n            user: JSON.parse(localStorage.getItem('user')),\n            data: { loading: true }\n        });\n\n        clinvar.getClinVar(this.props.geneID.text).then(data => {\n            this.setState({ data })\n        })\n    }\n    \n    toggleShow = () => {\n    this.setState(state => ({ isShow: !state.isShow }));\n    };\n    \n    render() {\n        const { data } = this.state;\n        // Clinvar API Returns: AminoAcidChange,Chromosome,GeneSymbol,phenotype,NucleotideChange\n\n    return (\n        <div>\n            <div style={{ justifyContent: \"center\"}}>\n            <button onClick={this.toggleShow} type=\"button\">\n                Show Clinvar\n            </button>\n            </div>\n        {this.state.isShow ? \n            <div>\n                <h2>Clinvar Results</h2>\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>Variant</th>\n                            <th>Effect Type</th>\n                            <th>Variant Score</th>\n                            <th>Inheritance Mode of Variant</th>\n                            <th>Phred Score</th>\n                            <th>Frequency Score</th>\n                            <th>Frequency Sources</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data[3].map((value, index) => (\n                        <tr>\n                            <td>{value[4]}</td>\n                            <td>{value[5]}</td>\n                            <td>{value.variantScore}</td>\n                            <td>{JSON.stringify(value.contributingInheritanceModes)}</td>\n                            <td>{value.phredScore}</td>\n                            <td>{value.frequencyScore}</td>\n                            <td>{value.frequencyData.knownFrequencies.map((value, index) => (\n                                <div>{value.source} : {value.frequency}</div>\n                            ))}</td>\n\n                        </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                {data[3].map((value, index) => (\n                    <div>\n                        <div>\n                        Variant: {value[4]}\n                        </div>\n                        <div>\n                        Effect Type: {value[5]}\n                        </div>\n                        <div>\n                        Amino Acid Change: {value[0]}\n                        </div>\n                        <div>\n                        Phenotype: {value[3]}\n                        </div>\n                        <br></br>\n                    </div>\n                    \n                ))}\n            </div>\n            : \n            null\n            }\n\n        </div>\n    );\n    }\n}\n\nexport { Clinvar };\n\n"]},"metadata":{},"sourceType":"module"}