{"ast":null,"code":"import { userService } from './user.service';\nimport { authHeader } from '../helpers/auth-header'; // Need to update to work with server.js responses!!\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (response.status !== 200) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        userService.logout();\n        window.location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nconst apiUrl = \"http://localhost:8002\";\n\nfunction getProbands() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`${apiUrl}/proband`, requestOptions).then(response => response.json()).then(result => {\n    console.log(result);\n    return result;\n  });\n}\n\nfunction getProbandById(proband) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  let cProband = proband.toString();\n  return fetch(`${apiUrl}/proband/id?id=${cProband}`, requestOptions).then(response => response.json()).then(result => {\n    console.log(result);\n    return result;\n  });\n}\n\nfunction getPheno(proband) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  console.log(\"Get Pheno called: \" + proband);\n  return fetch(`${apiUrl}/proband/pheno?id=${proband.substring(1, proband.length - 1)}`, requestOptions).then(response => response.json()).then(result => {\n    let text = result.map(({\n      text\n    }) => text);\n    console.log(text.join(\" - \"));\n    return text.join(\" - \");\n  });\n}\n\nfunction getGenes(proband) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`${apiUrl}/proband/genes?id=${proband}`, requestOptions).then(handleResponse).then(data => {\n    if (data) {\n      return data;\n    }\n\n    return \"Error\";\n  });\n}\n\nexport const api = {\n  getProbands,\n  getProbandById,\n  getPheno,\n  getGenes\n};","map":{"version":3,"sources":["/Users/samueldsouza/Desktop/GGC/ggcRD-Sam/ggcrd-sam/ggcrd-client/src/services/api.service.js"],"names":["userService","authHeader","handleResponse","response","text","then","data","JSON","parse","status","logout","window","location","reload","error","message","statusText","Promise","reject","apiUrl","getProbands","requestOptions","method","headers","fetch","json","result","console","log","getProbandById","proband","cProband","toString","getPheno","substring","length","map","join","getGenes","api"],"mappings":"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","sourcesContent":["import { userService } from './user.service'\nimport { authHeader } from '../helpers/auth-header';\n\n// Need to update to work with server.js responses!!\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (response.status !== 200) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                userService.logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}\n\nconst apiUrl = \"http://localhost:8002\"\n\nfunction getProbands() {\n\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    return fetch(`${apiUrl}/proband`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result)\n            return result\n        })\n}\n\nfunction getProbandById(proband) {\n\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    let cProband = proband.toString()\n\n\n    return fetch(`${apiUrl}/proband/id?id=${cProband}`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            console.log(result)\n            return result\n        })\n}\n\nfunction getPheno(proband) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n    console.log(\"Get Pheno called: \" + proband)\n    return fetch(`${apiUrl}/proband/pheno?id=${proband.substring(1, proband.length-1)}`, requestOptions)\n        .then(response => response.json())\n        .then(result => {\n            let text = result.map(({ text }) => text)\n            console.log(text.join(\" - \"))\n            return text.join(\" - \")\n        })\n}\nfunction getGenes(proband) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    return fetch(`${apiUrl}/proband/genes?id=${proband}`, requestOptions)\n        .then(handleResponse)\n        .then(data => {\n            if (data) {\n                return data\n            }\n            return \"Error\";\n        });\n}\n\nexport const api = {\n    getProbands,\n    getProbandById,\n    getPheno,\n    getGenes\n};"]},"metadata":{},"sourceType":"module"}